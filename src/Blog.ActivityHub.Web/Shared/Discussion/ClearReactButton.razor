@using Blog.ActivityHub.Contracts
@using Grpc.Core

@inherits CancellableComponent;

@inject ILogger<ReactButton> _logger;
@inject Discussion.DiscussionClient _discussionClient;

<button @onclick="ClearVote">&times;</button>

@code {

    [Parameter]
    public int? EntryId { get; set; }

    [Parameter]
    public Func<Reaction, Task>? OnVote { get; set; }

    private async Task ClearVote()
    {
        if (EntryId == null) return;
        try
        {
            await _discussionClient.PostReactionAsync(
                new PostReactionRequest { EntryId = EntryId.Value, Reaction = Reaction.None },
                cancellationToken: CancellationToken);

            if (OnVote != null)
                await OnVote(Reaction.None);
        }
        catch (RpcException e)
        {
            _logger.LogError(e, "Failed to clear discussion reaction");
        }
    }

}