// <auto-generated />
using System;
using Blog.ActivityHub.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.ActivityHub.Api.Data.Migrations
{
    [DbContext(typeof(ActivityDbContext))]
    [Migration("20220826095332_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Blog.ActivityHub.Api.Data.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT")
                        .HasColumnName("created");

                    b.Property<int>("EntryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("entry_id");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ip_address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<DateTime?>("Removed")
                        .HasColumnType("TEXT")
                        .HasColumnName("removed");

                    b.HasKey("Id")
                        .HasName("pk_comments");

                    b.HasIndex("EntryId")
                        .HasDatabaseName("ix_comments_entry_id");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("Blog.ActivityHub.Api.Data.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT")
                        .HasColumnName("created");

                    b.Property<string>("RelPermalink")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("rel_permalink");

                    b.HasKey("Id")
                        .HasName("pk_entries");

                    b.ToTable("entries", (string)null);
                });

            modelBuilder.Entity("Blog.ActivityHub.Api.Data.Models.Reaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT")
                        .HasColumnName("created");

                    b.Property<int>("EntryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("entry_id");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ip_address");

                    b.Property<int>("ReactionType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("reaction_type");

                    b.Property<DateTime?>("Removed")
                        .HasColumnType("TEXT")
                        .HasColumnName("removed");

                    b.HasKey("Id")
                        .HasName("pk_reactions");

                    b.HasIndex("EntryId")
                        .HasDatabaseName("ix_reactions_entry_id");

                    b.ToTable("reactions", (string)null);
                });

            modelBuilder.Entity("Blog.ActivityHub.Api.Data.Models.Comment", b =>
                {
                    b.HasOne("Blog.ActivityHub.Api.Data.Models.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_comments_entries_entry_id");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("Blog.ActivityHub.Api.Data.Models.Reaction", b =>
                {
                    b.HasOne("Blog.ActivityHub.Api.Data.Models.Entry", "Entry")
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reactions_entries_entry_id");

                    b.Navigation("Entry");
                });
#pragma warning restore 612, 618
        }
    }
}
