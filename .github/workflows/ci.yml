name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: setup .net
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: restore
        run: dotnet restore

      - name: build
        run: dotnet build -c Release --no-restore

      - name: test
        run: dotnet test -c Release --no-build --verbosity normal --logger "trx;LogFileName=test_results.trx" --collect "XPlat Code Coverage"

      - name: report unit tests
        uses: dorny/test-reporter@v1
        with:
          name: unit test results
          path: "**/test_results.trx"
          reporter: dotnet-trx

      - name: publish api
        run: dotnet publish src/Blog.ActivityHub.Api/Blog.ActivityHub.Api.csproj -c Release --no-build -o publish/api

      - name: publish app
        run: dotnet publish src/Blog.ActivityHub.Web/Blog.ActivityHub.Web.csproj -c Release --no-build -o publish/app

      - name: archive api artifacts
        uses: actions/upload-artifact@v3
        with:
          name: api-artifacts
          path: "publish/api/*"
          if-no-files-found: error

      - name: archive app artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: "publish/app/*"
          if-no-files-found: error

  publish:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - build
    
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME_API: crookm/blog/activityhub-api
      IMAGE_NAME_APP: crookm/blog/activityhub-app
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3

      - name: login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: docker api metadata
        id: meta-api
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: docker app metadata
        id: meta-app
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_APP }}
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: docker build and push api
        uses: docker/build-push-action@v3
        with:
          push: true
          context: api-artifacts/
          file: api.Dockerfile
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}

      - name: docker build and push app
        uses: docker/build-push-action@v3
        with:
          push: true
          context: app-artifacts/
          file: app.Dockerfile
          tags: ${{ steps.meta-app.outputs.tags }}
          labels: ${{ steps.meta-app.outputs.labels }}

  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://activityhub-app.mattcrook.io
    needs:
      - publish

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-artifacts
          path: app-artifacts

      - name: deploy app to pages
        uses: cloudflare/pages-action@v1.1.0
        with:
          projectName: matt-activityhub
          directory: app-artifacts/wwwroot
          accountId: 1166a05f119cbc98936aee10d7375626
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
